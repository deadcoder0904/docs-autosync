/* DO NOT EDIT! this file was generated by graphql-codegen */
/* eslint-disable */
import * as Types from "./types.generated";

import { useMutation, UseMutationOptions } from "react-query";

function fetcher<TData, TVariables>(query: string, variables?: TVariables) {
  return async (): Promise<TData> => {
    const res = await fetch("http://localhost:3000/api", {
      method: "POST",
      ...{
        headers: { credentials: "include", "content-type": "application/json" },
      },
      body: JSON.stringify({ query, variables }),
    });

    const json = await res.json();

    if (json.errors) {
      const { message } = json.errors[0];

      throw new Error(message);
    }

    return json.data;
  };
}
export type DeleteDocsByIdMutationVariables = Types.Exact<{
  id: Types.Scalars["String"];
}>;

export type DeleteDocsByIdMutation = {
  __typename?: "Mutation";
  deleteDocsById?: { __typename?: "Docs"; id: string } | null | undefined;
};

export const DeleteDocsByIdDocument = `
    mutation DeleteDocsById($id: String!) {
  deleteDocsById(id: $id) {
    id
  }
}
    `;
export const useDeleteDocsByIdMutation = <TError = unknown, TContext = unknown>(
  options?: UseMutationOptions<
    DeleteDocsByIdMutation,
    TError,
    DeleteDocsByIdMutationVariables,
    TContext
  >
) =>
  useMutation<
    DeleteDocsByIdMutation,
    TError,
    DeleteDocsByIdMutationVariables,
    TContext
  >(
    "DeleteDocsById",
    (variables?: DeleteDocsByIdMutationVariables) =>
      fetcher<DeleteDocsByIdMutation, DeleteDocsByIdMutationVariables>(
        DeleteDocsByIdDocument,
        variables
      )(),
    options
  );
